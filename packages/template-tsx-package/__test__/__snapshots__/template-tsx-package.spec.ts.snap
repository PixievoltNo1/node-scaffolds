// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tsx-package simple: README.md 1`] = `
"<header>
  <h1 align=\\"center\\">
    <a href=\\"https://github.com/guanghechen/guanghechen/tree/master/packages/waw#readme\\">@guanghechen/waw</a>
  </h1>
  <div align=\\"center\\">
    <a href=\\"https://www.npmjs.com/package/@guanghechen/waw\\">
      <img
        alt=\\"Npm Version\\"
        src=\\"https://img.shields.io/npm/v/@guanghechen/waw.svg\\"
      />
    </a>
    <a href=\\"https://www.npmjs.com/package/@guanghechen/waw\\">
      <img
        alt=\\"Npm Download\\"
        src=\\"https://img.shields.io/npm/dm/@guanghechen/waw.svg\\"
      />
    </a>
    <a href=\\"https://www.npmjs.com/package/@guanghechen/waw\\">
      <img
        alt=\\"Npm License\\"
        src=\\"https://img.shields.io/npm/l/@guanghechen/waw.svg\\"
      />
    </a>
    <a href=\\"#install\\">
      <img
        alt=\\"Module Formats: cjs, esm\\"
        src=\\"https://img.shields.io/badge/module_formats-cjs%2C%20esm-green.svg\\"
      />
    </a>
    <a href=\\"https://github.com/nodejs/node\\">
      <img
        alt=\\"Node.js Version\\"
        src=\\"https://img.shields.io/node/v/@guanghechen/waw\\"
      />
    </a>
    <a href=\\"https://github.com/facebook/react\\">
      <img
        alt=\\"React Version\\"
        src=\\"https://img.shields.io/npm/dependency-version/@guanghechen/waw/peer/react\\"
      />
    </a>
    <a href=\\"https://github.com/prettier/prettier\\">
      <img
        alt=\\"Code Style: prettier\\"
        src=\\"https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square\\"
      />
    </a>
  </div>
</header>
<br/>


Some descriptions.

## Install

* npm

  \`\`\`bash
  npm install --save @guanghechen/waw
  \`\`\`

* yarn

  \`\`\`bash
  yarn add @guanghechen/waw
  \`\`\`

## Usage

  * Used in React project

    \`\`\`tsx
    // index.tsx
    import React from 'react'
    import ReactDOM from 'react-dom'
    import HelloWorld from '@guanghechen/waw'
    import '@guanghechen/waw/lib/esm/index.css'

    ReactDOM.render(
      <HelloWorld />,
      document.getElementById('root')
    )
    \`\`\`


## Related


[homepage]: https://github.com/guanghechen/guanghechen/tree/master/packages/waw#readme
"
`;

exports[`tsx-package simple: package.json 1`] = `
"{
  \\"name\\": \\"@guanghechen/waw\\",
  \\"version\\": \\"<LATEST>\\",
  \\"description\\": \\"Some descriptions\\",
  \\"author\\": {
    \\"name\\": \\"guanghechen\\",
    \\"url\\": \\"https://github.com/guanghechen/\\"
  },
  \\"repository\\": {
    \\"type\\": \\"git\\",
    \\"url\\": \\"https://github.com/guanghechen/.git\\",
    \\"directory\\": \\"packages/waw\\"
  },
  \\"homepage\\": \\"https://github.com/guanghechen/guanghechen/tree/master/packages/waw#readme\\",
  \\"keywords\\": [
    \\"react component\\",
    \\"stylus\\",
    \\"typescript\\"
  ],
  \\"main\\": \\"lib/cjs/index.js\\",
  \\"module\\": \\"lib/esm/index.js\\",
  \\"types\\": \\"lib/types/index.d.ts\\",
  \\"source\\": \\"src/index.tsx\\",
  \\"license\\": \\"MIT\\",
  \\"engines\\": {
    \\"node\\": \\">=14.15.0\\"
  },
  \\"files\\": [
    \\"lib/\\",
    \\"!lib/**/*.js.map\\",
    \\"!lib/**/*.d.ts.map\\",
    \\"package.json\\",
    \\"CHANGELOG.md\\",
    \\"LICENSE\\",
    \\"README.md\\"
  ],
  \\"scripts\\": {
    \\"start\\": \\"rollup -w -c rollup.config.js\\",
    \\"build\\": \\"cross-env NODE_ENV=production rollup -c rollup.config.js\\",
    \\"postinstall\\": \\"yarn build\\",
    \\"prebuild\\": \\"rimraf lib/\\",
    \\"prepublishOnly\\": \\"cross-env ROLLUP_SHOULD_SOURCEMAP=false yarn build\\",
    \\"test\\": \\"cross-env TS_NODE_FILES=true jest --config ../../jest.config.js --rootDir .\\"
  },
  \\"peerDependencies\\": {
    \\"@types/react\\": \\"^17.0.3\\",
    \\"clsx\\": \\"^1.1.1\\",
    \\"react\\": \\"^17.0.1\\"
  },
  \\"devDependencies\\": {
    \\"@guanghechen/rollup-config-tsx\\": \\"^<LATEST>\\",
    \\"@types/react\\": \\"^17.0.3\\",
    \\"clsx\\": \\"^1.1.1\\",
    \\"react\\": \\"^17.0.1\\",
    \\"rollup\\": \\"2.40.0\\"
  },
  \\"browserslist\\": [
    \\"last 2 versions\\",
    \\"Firefox ESR\\",
    \\"> 1%\\",
    \\"ie >= 11\\"
  ]
}
"
`;

exports[`tsx-package simple: rollup.config.js 1`] = `
"import createRollupConfigs from '@guanghechen/rollup-config-tsx'
import path from 'path'
import manifest from './package.json'

const configs = createRollupConfigs({
  shouldSourceMap: false,
  preprocessOptions: {
    input: ['src/style/index.styl'],
    pluginOptions: {
      multiEntryOptions: {
        exports: false,
      },
      postcssOptions: {
        modules: {
          localsConvention: 'camelCase',
          generateScopedName: 'ghc-[local]',
        },
        postcssUrlOptions: {
          url: 'inline',
          maxSize: 0.5, // 0.5 KB
          assetsPath: path.join(__dirname, 'lib'),
          fallback: 'copy',
          basePath: [path.join(__dirname, 'src')],
          useHash: false,
        },
      },
    },
  },
  manifest,
  pluginOptions: {
    typescriptOptions: { tsconfig: 'tsconfig.src.json' },
    postcssOptions: {
      extract: 'index.css',
      minimize: false,
      sourceMap: false,
      modules: {
        localsConvention: 'camelCase',
        generateScopedName: 'ghc-[local]',
      },
      postcssUrlOptions: {
        url: 'inline',
        maxSize: 0.5, // 0.5 KB
        basePath: [path.join(__dirname, 'src')],
        fallback: function (asset) {
          const url = asset.url.replace(/^[/]assets[/]/, '../assets/')
          return url
        },
      },
    },
  },
})

export default configs
"
`;

exports[`tsx-package simple: src/component.tsx 1`] = `
"import React from 'react'
import classes from './style/index.styl'


export interface WawProps {
  content?: string
}


export function Waw(props: WawProps): React.ReactElement {
  return (
    <div className={ classes.container } >
      {props.content}
    </div>
  )
}


Waw.displayName = 'Waw'
"
`;

exports[`tsx-package simple: src/index.tsx 1`] = `
"import { Waw } from './component'

export * from './component'
export default Waw
"
`;

exports[`tsx-package simple: src/style/index.styl 1`] = `
".container
  display: flex
"
`;

exports[`tsx-package simple: tsconfig.json 1`] = `
"{
  \\"extends\\": \\"../../tsconfig\\",
  \\"compilerOptions\\": {
    \\"lib\\": [\\"esnext\\", \\"dom\\", \\"dom.iterable\\"]
  },
  \\"include\\": [\\"src\\", \\"script\\", \\"__test__\\"]
}
"
`;

exports[`tsx-package simple: tsconfig.src.json 1`] = `
"{
  \\"extends\\": \\"../../tsconfig.settings\\",
  \\"compilerOptions\\": {
    \\"lib\\": [\\"esnext\\", \\"dom\\", \\"dom.iterable\\"],
    \\"declarationDir\\": \\"lib/types\\",
    \\"rootDir\\": \\"src\\"
  },
  \\"include\\": [\\"src\\"]
}
"
`;
