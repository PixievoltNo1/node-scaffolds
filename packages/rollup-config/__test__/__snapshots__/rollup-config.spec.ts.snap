// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`build simple: rollup cjs 1`] = `
"'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var fs = require('fs-extra');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);

var data = {
  name: \\"alice\\"
};
var data$1 = {
  data: data
};

function isFileSync(filepath) {
    if (!fs__default[\\"default\\"].existsSync(filepath))
        return false;
    return fs__default[\\"default\\"].statSync(filepath).isFile();
}

console.log('data:', data$1);
console.log(isFileSync(__filename));
var index = (function () { return data$1; });

exports[\\"default\\"] = index;
exports.isFileSync = isFileSync;
"
`;

exports[`build simple: rollup es 1`] = `
"import fs from 'fs-extra';

var data = {
  name: \\"alice\\"
};
var data$1 = {
  data: data
};

function isFileSync(filepath) {
    if (!fs.existsSync(filepath))
        return false;
    return fs.statSync(filepath).isFile();
}

console.log('data:', data$1);
console.log(isFileSync(__filename));
var index = (function () { return data$1; });

export { index as default, isFileSync };
"
`;

exports[`build simple: rollup es 2`] = `
"/**
 * Check if the given filepath is an existed path of file.
 *
 * @param filepath
 * @returns
 */
declare function isFileSync(filepath: string): boolean;

declare const _default: () => {
    data: {
        name: string;
    };
};

export { _default as default, isFileSync };
"
`;
